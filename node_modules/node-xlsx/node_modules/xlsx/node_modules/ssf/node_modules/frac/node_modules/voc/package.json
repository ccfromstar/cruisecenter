{
  "version": "1.0.0",
  "bin": {
    "voc": "./voc.njs"
  },
  "name": "voc",
  "author": {
    "name": "SheetJS"
  },
  "description": "Generalized Literate Programming Framework",
  "keywords": [
    "literate",
    "programming",
    "voc",
    "javascript"
  ],
  "main": "voc.js",
  "files": [
    "LICENSE",
    "README.md",
    "marked.js",
    "mkdirp.js",
    "voc.js",
    "voc.njs"
  ],
  "dependencies": {},
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/SheetJS/voc.git"
  },
  "homepage": "http://sheetjs.com/opensource",
  "bugs": {
    "url": "https://github.com/SheetJS/voc/issues"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=0.8"
  },
  "preferGlobal": true,
  "readme": "# Very Ornate Code\n\nSo [Literate Coffeescript](http://coffeescript.org/#literate) is a cool idea,\nbut why isn't there a standard JS or compile-to-JS version?  JS Programmers want\nsome love too!  This is my effort to rectify this inequity.\n\n## How to use this\n\nTo use in-browser, include the marked source (and optionally the coffee-script \nsource if desired):\n\n```html\n<script src=\"https://raw.github.com/chjj/marked/master/lib/marked.js\"></script>\n<script src=\"http://coffeescript.org/extras/coffee-script.js\"></script>\n```\n\nIn tooling, `npm install -g voc` and run against your markdown file:\n\n```bash\n$ voc yourfile.md\n```\n\n## VOC style\n\nVOC searches for markdown code blocks.  Using GFM guards (triple backticks),\nhints after the opening backticks are used to direct content.\n\nFor example, \"\\`\\`\\`&gt;foo.bar\" will redirect content in the codeblock to \n`foo.bar`.  \n\n## Preprocessing\n\nIf a preprocessor is available, VOC can be told to use it!  This is needed for\ncertain magic cases like Makefiles (which require explicit tabs).\n\nVOC exposes two utility functions:\n\n`VOC.run(src)` will process the specified string source.\n\n`VOC.add(lang, cb)` will assign the handler for the language.  If `lang` is an\narray, the handler will be assigned for each language in the array.\n\nThe language handlers will be called with one argument: the actual source to be\nprocessed.  Consecutive blocks with the same language are concatenated.\n\nSee the enclosed [voc.md](voc.md) for more information.\n\n[![Dependencies Status](https://david-dm.org/sheetjs/voc/status.svg)](https://david-dm.org/sheetjs/voc)\n[![NPM Downloads](https://img.shields.io/npm/dt/voc.svg)](https://npmjs.org/package/voc)\n[![ghit.me](https://ghit.me/badge.svg?repo=sheetjs/js-xlsx)](https://ghit.me/repo/sheetjs/js-xlsx)\n[![Analytics](https://ga-beacon.appspot.com/UA-36810333-1/SheetJS/voc?pixel)](https://github.com/SheetJS/voc)\n\n",
  "readmeFilename": "README.md",
  "_id": "voc@1.0.0",
  "dist": {
    "shasum": "0a4c9adc0d1bc3dfb504458d1510114a6595811a"
  },
  "_from": "voc@~1.0.0",
  "_resolved": "https://registry.npmjs.org/voc/-/voc-1.0.0.tgz"
}
